worker_processes 1;
error_log logs/error.log info;
worker_rlimit_nofile 20480;

events {
    worker_connections 10620;
}

http {
    underscores_in_headers on;

    resolver 127.0.0.53 ipv6=on;

    keepalive_requests 10000;

    client_max_body_size 12m;
    client_body_buffer_size 13m;
    client_body_in_single_buffer on;

    upstream httpbin {
        server 127.0.0.1:8080;

        keepalive 320;
        keepalive_requests 10000;
        keepalive_timeout 60s;
    }

    server {
        listen 0.0.0.0:10000 default_server reuseport;
        listen [::]:10000 default_server reuseport;

        location / {
            access_by_lua_block {
                require("resty_ffi")
                local demo = ngx.load_ffi("ffi_go_basic_auth",
                    '{"user":"fooname","password":"validpassword"}')
                local auth = ngx.var.http_authorization
                local body = "ok"
                if ngx.req.get_method() == "POST" then
                    ngx.req.read_body()  -- explicitly read the req body
                    body = ngx.req.get_body_data()
                    assert(body)
                end
                local tbl = {auth, body}
                local data = table.concat(tbl, "\n")
                local _, rc, res = demo:auth(data, req)
                ngx.status = rc
                ngx.print(res)
            }

            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_pass http://httpbin;
        }
    }
}
